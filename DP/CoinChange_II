class Solution {
public:
    int helper(int amount, vector<int>& coins,int idx, vector<vector<int>>& dp){
        if(amount==0){
            return 1;
        }
        if(amount<0){
            return 0;
        }
        if(dp[idx][amount]!=-1){
            return dp[idx][amount];
        }
        if(coins.size()==1 && coins[0]>amount){
            return 0;
        }
        int ans = 0;
        for(int i=idx;i<coins.size();i++){
            ans += helper(amount-coins[i],coins,i,dp);
        }
        dp[idx][amount] = ans;
        return ans;
    }
    int change(int amount, vector<int>& coins) {
        int n = coins.size();
        vector<vector<int>> dp(n,vector<int>(amount+1,-1));
        return helper(amount,coins,0,dp);
        return ans;
    }
};