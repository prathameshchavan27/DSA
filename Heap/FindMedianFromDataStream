class MedianFinder {
public:
    priority_queue<int>maxi;
    priority_queue<int,vector<int>,greater<int>>mini;
    MedianFinder() {
        
    }
    void addNum(int num) {
        if(maxi.size()==0)
        {
            maxi.push(num);
            return;
        }
        if(maxi.size()>mini.size())
        {
            if(maxi.top()>num)
            {
                mini.push(maxi.top());
                maxi.pop();
                maxi.push(num);
            }
            else
            mini.push(num);
        }
        else
        {
            if(mini.top()<num)
            {
                maxi.push(mini.top());
                mini.pop();
                mini.push(num);
            }
            else
            maxi.push(num);
        }
    }
    
    double findMedian() {
        int a=maxi.size();
        int b=mini.size();
        if((a+b)%2==0)
        return (maxi.top()+mini.top())/2.0;
        return maxi.top();
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */