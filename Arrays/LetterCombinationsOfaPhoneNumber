class Solution {
public:
    void helper(int i,string digits,string& temp,vector<string>& ans,unordered_map<char,string>& map){
        if(i==digits.size()){
            ans.push_back(temp);
            return;
        }
        string str = map[digits[i]];
        for(int j=0;j<str.size();j++){
            temp.push_back(str[j]);
            helper(i+1,digits,temp,ans,map);
            temp.pop_back();
        }
    }
    vector<string> letterCombinations(string digits) {
        vector<string> ans;
        if(digits.size()==0){
            return ans;
        }
        unordered_map<char,string> map;
        map['2'] = "abc";
        map['3'] = "def";
        map['4'] = "ghi";
        map['5'] = "jkl";
        map['6'] = "mno";
        map['7'] = "pqrs";
        map['8'] = "tuv";
        map['9'] = "wxyz";
        string temp;
        helper(0,digits,temp,ans,map);
        return ans;
    }
};